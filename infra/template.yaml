AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud-resume-challenge

  Sample SAM Template for cloud-resume-challenge


Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:
  # S3 bucket to host the website
  MyWebsite:
    Type: AWS::S3::Bucket
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      BucketName: my-resume-site-phantom

  # Policy to allow public read access to the S3 bucket
  MyWebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MyWebsite
      PolicyDocument:
        Version: '2012-10-17'  # The policy version must be '2012-10-17'
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref MyWebsite
                - /*
      
  # CloudFront distribution for the website
  MyDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        ViewerCertificate:
         AcmCertificateArn: !Ref MyCertificate
         SslSupportMethod: sni-only
        Aliases:
          - cetienne.cloud
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: myS3Origin
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: my-resume-site-phantom.s3-website-us-east-1.amazonaws.com
            Id: myS3Origin
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        Enabled: true   # Boolean value should not be in quotes
        DefaultRootObject: index.html

  # Route53 record to point to the CloudFront distribution
  MyRoute53Record:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneId: "Z00191493U1XET4UA7DAO"
      RecordSets: 
        - Name: cetienne.cloud. 
          Type: A
          AliasTarget:
            DNSName: !GetAtt MyDistribution.DomainName  
            HostedZoneId: "Z2FDTNDATAQYW2" 

  # ACM certificate for the domain
  MyCertificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName: "cetienne.cloud"
      ValidationMethod: DNS

  # DynamoDB table to store visit counts
  MyDynamoDBTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: "cloud-resume-challenge"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "ID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ID"
          KeyType: "HASH"
     
  # Lambda function to handle visit counts
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
        - DynamoDBCrudPolicy:
            TableName: "cloud-resume-challenge"
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        Views:
          Type: Api
          Properties:
            Path: /visits
            Method: post

Outputs:
  # API Gateway endpoint URL for the Lambda function
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  
  # ARN of the Lambda function
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  
  # IAM Role created for the Lambda function
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
